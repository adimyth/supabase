- name: allowed-queries
  definition:
    queries:
      - name: smartsell_admin_index
        query: |
          query index ($start_index: Int = 0, $limit_index: Int = 5, $search_string: String = "%") {
          	admins: smartsell_admin(where: {_or:[{name:{_ilike:$search_string}},{username:{_ilike:$search_string}}]}, offset: $start_index, limit: $limit_index, order_by: {created_at:desc}) {
          		id
          		id_role
          		username
          		parent_user
          		name
          		role: admin_to_role {
          			id_role
          			name
          		}
          	}
          	admin_count: smartsell_admin_aggregate {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_admin_update
        query: |
          mutation update ($admin_id: bigint!, $admin: smartsell_admin_set_input!) {
          	update_smartsell_admin_by_pk(_set: $admin, pk_columns: {id:$admin_id}) {
          		id
          	}
          }
      - name: smartsell_admin_destroy
        query: |
          mutation destroy ($admin_ids: [bigint!]!) {
          	delete_smartsell_admin(where: {id:{_in:$admin_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllAdminsForCompany
        query: |
          query getAllAdminsForCompany ($search_string: String = "%") {
          	admins: smartsell_admin(where: {_or:[{name:{_ilike:$search_string}},{username:{_ilike:$search_string}}]}) {
          		id
          		id_role
          		username
          		parent_user
          		name
          		role: admin_to_role {
          			id_role
          			name
          		}
          	}
          }
      - name: smartsell_getMetaProperties
        query: |
          query getMetaProperties {
          	smartsell_users_meta_properties {
          		id
          		name
          		type
          		created_at
          		updated_at
          	}
          }
      - name: smartsell_getAllTimerChallenges
        query: |
          query getAllTimerChallenges ($company_id: bigint!, $start_index: Int! = 0, $limit_index: Int! = 5, $search_string: String = "%") {
          	meta_timer_challenges: smartsell_meta_timer_challenges(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}},{is_freezed:{_eq:1}}]}, limit: $limit_index, offset: $start_index, order_by: {start_time:asc}) {
          		id
          		company_id
          		name
          		description
          		quiz_type
          		url
          		leaderboard_flag
          		leaderboard_type
          		question_json
          		answer_result
          		show_explanation
          		max_duration
          		start_time
          		end_time
          		contribution
          		created_at
          		updated_at
          		question_count: meta_timer_challenges_to_meta_timer_challenges_questions_aggregate {
          			aggregate {
          				count
          			}
          		}
          	}
          	challenges_count: smartsell_meta_timer_challenges_aggregate(where: {company_id:{_eq:$company_id}}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_fetchCompanyDetails
        query: |
          query fetchCompanyDetails ($admin_id: Int!) {
          	smartsell_company_admins(where: {admin_id:{_eq:$admin_id}}) {
          		company: company_admins_to_company {
          			id_company
          			unique_id
          			name
          			short_name
          			users_count: users_aggregate(where: {test_user:{_eq:0}}) {
          				aggregate {
          					count
          				}
          			}
          		}
          	}
          }
      - name: smartsell_addAdminToCompany
        query: |
          mutation addAdminToCompany ($company_id: Int!, $selected_admins: [smartsell_company_admins_insert_input!]!) {
          	delete_smartsell_company_admins(where: {company_id:{_eq:$company_id}}) {
          		affected_rows
          	}
          	insert_smartsell_company_admins(objects: $selected_admins) {
          		affected_rows
          	}
          }
      - name: smartsell_getCompanyProperties
        query: |
          query getCompanyProperties ($idCompany: bigint!) {
          	smartsell_company_user_property(where: {company_id:{_eq:$idCompany}}) {
          		id
          		is_unique
          		is_mandatory
          		display_name
          		property_name
          		status
          		created_at
          		updated_at
          	}
          }
      - name: smartsell_getDistinctUserProperities
        query: |
          query getDistinctUserProperities ($meta_type: smartsell_users_select_column!) {
          	smartsell_users(distinct_on: [$meta_type]) {
          		channel_name
          		city_name
          		company_id
          		country_code
          		designation
          		location
          		middle_name
          	}
          }
      - name: smartsell_company_deleteExistingCompanyProperty
        query: |
          mutation deleteExistingCompanyProperty ($idCompany: bigint!, $id: Int!) {
          	delete_smartsell_company_user_property(where: {_and:[{id:{_eq:$id}},{company_id:{_eq:$idCompany}}]}) {
          		affected_rows
          	}
          }
      - name: smartsell_company_getAppConfigurations
        query: |
          query getAppConfigurations ($id_company: bigint!) {
          	company: smartsell_company(where: {id_company:{_eq:$id_company}}) {
          		app_configs
          		signatures
          		signatureformat
          		launchpad_api_url
          		launchpad_admin_api_url
          	}
          	company_properties: smartsell_company_user_property {
          		id
          		company_id
          		meta_name
          		display_name
          		is_mandatory
          		is_unique
          		status
          		property_name
          		property_type
          		updated_at
          		created_at
          	}
          }
      - name: smartsell_updateCompanySignature
        query: |
          mutation updateCompanySignature ($id_company: bigint!, $signatures: String!, $signatureformat: String!) {
          	update_smartsell_company(where: {id_company:{_eq:$id_company}}, _set: {signatures:$signatures,signatureformat:$signatureformat}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllCountriesForCompany
        query: |
          query getAllCountriesForCompany ($search_string: String = "%") {
          	smartsell_country(where: {_and:[{name:{_ilike:$search_string}},{status:{_eq:1}}]}) {
          		id
          		name
          		code
          		status
          		company: country_to_country_has_companies {
          			company_id
          		}
          	}
          }
      - name: smartsell_addCountryToCompany
        query: |
          mutation addCountryToCompany ($company_id: Int!, $selected_countries: [smartsell_company_countries_insert_input!]!) {
          	delete_smartsell_company_countries(where: {company_id:{_eq:$company_id}}) {
          		affected_rows
          	}
          	insert_smartsell_company_countries(objects: $selected_countries) {
          		affected_rows
          	}
          }
      - name: smartsell_companies_index
        query: |
          query getAllCompanies ($start_index: Int = 0, $limit_index: Int = 5, $search_string: String = "%") {
          	companies: smartsell_company(where: {_or:[{name:{_ilike:$search_string}},{short_name:{_ilike:$search_string}}]}, offset: $start_index, limit: $limit_index) {
          		id_company
          		unique_id
          		name
          		short_name
          		address
          		app_configs
          		signatures
          		signatureformat
          		launchpad_api_url
          		launchpad_admin_api_url
          		admins: company_to_company_admins {
          			admin_id
          		}
          	}
          	companeis_count: smartsell_company_aggregate {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_company_destroy
        query: |
          mutation destroy ($ids: [bigint!]!) {
          	delete_smartsell_company(where: {id_company:{_in:$ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_language_index
        query: |
          query fetchAllLanguages {
          	smartsell_meta_languages {
          		id
          		language
          		reg_language
          		short_language
          		sequence
          	}
          }
      - name: smartsell_admin_store
        query: |
          mutation store ($admin: smartsell_admin_insert_input!) {
          	insert_smartsell_admin_one(object: $admin) {
          		id
          	}
          }
      - name: smartsell_role_index
        query: |
          query index {
          	smartsell_role(where: {status:{_eq:1}}) {
          		id_role
          		name
          		roles
          		status
          		created_at
          		updated_at
          	}
          }
      - name: smartsell_getCompanyBranding
        query: |
          query getCompanyBranding ($id_company: bigint!) {
          	smartsell_company_branding(where: {company_id:{_eq:$id_company}}, limit: 1) {
          		accent_dark
          		accent_light
          		company_id
          		font_color_dark
          		font_color_light
          		font_family_primary
          		font_family_secondary
          		heading1_font
          		heading2_font
          		heading3_font
          		heading4_font
          		heading5_font
          		home_screen_layout
          		homepage_configs
          		icon_back
          		icon_company
          		icon_dvc
          		icon_filter
          		icon_launchpad
          		icon_leadgen
          		icon_mcolletral
          		icon_potd
          		icon_ppresentation
          		icon_profile
          		icon_qlinks
          		icon_roleplay
          		icon_search
          		icon_share
          		icon_timer_challenges_duration
          		icon_sync
          		icon_timer_challenges_question
          		icon_timer_challenges_score
          		icon_timer_challenges_end_time
          		icon_timerchallenge
          		paragraph1_font
          		paragraph2_font
          		paragraph3_font
          		poster_salutation
          		poster_signature
          		primary_dark
          		primary_light
          		secondary_dark
          		secondary_light
          		text_configurations
          	}
          }
      - name: smartsell_uploadBranding
        query: |
          mutation uploadBranding ($company_id: bigint!, $primary_dark: String, $primary_light: String, $accent_dark: String, $accent_light: String, $secondary_dark: String, $secondary_light: String, $font_color_dark: String, $font_color_light: String, $heading1_font: String, $heading2_font: String, $heading3_font: String, $heading4_font: String, $heading5_font: String, $paragraph1_font: String, $paragraph2_font: String, $paragraph3_font: String, $icon_mcollateral: String, $icon_ppresentation: String, $icon_potd: String, $icon_dvc: String, $icon_qlinks: String, $icon_timerchallenge: String, $icon_back: String, $icon_search: String, $icon_share: String, $icon_filter: String, $text_configurations: String, $icon_profile: String, $icon_sync: String, $icon_timer_challenges_duration: String, $icon_timer_challenges_end_time: String, $icon_timer_challenges_score: String, $icon_timer_challenges_question: String, $icon_company: String, $icon_launchpad: String, $icon_leadgen: String, $poster_signature: String, $poster_salutation: String, $icon_roleplay: String, $homepage_configs: String, $home_screen_layout: String) {
          	update_smartsell_company_branding(where: {company_id:{_eq:$company_id}}, _set: {company_id:$company_id,primary_dark:$primary_dark,primary_light:$primary_light,accent_dark:$accent_dark,accent_light:$accent_light,secondary_dark:$secondary_dark,secondary_light:$secondary_light,font_color_dark:$font_color_dark,font_color_light:$font_color_light,heading1_font:$heading1_font,heading2_font:$heading2_font,heading3_font:$heading3_font,heading4_font:$heading4_font,heading5_font:$heading5_font,paragraph1_font:$paragraph1_font,paragraph2_font:$paragraph2_font,paragraph3_font:$paragraph3_font,icon_mcollateral:$icon_mcollateral,icon_ppresentation:$icon_ppresentation,icon_potd:$icon_potd,icon_dvc:$icon_dvc,icon_qlinks:$icon_qlinks,icon_timerchallenge:$icon_timerchallenge,icon_back:$icon_back,icon_search:$icon_search,icon_share:$icon_share,icon_filter:$icon_filter,text_configurations:$text_configurations,icon_profile:$icon_profile,icon_sync:$icon_sync,icon_timer_challenges_duration:$icon_timer_challenges_duration,icon_timer_challenges_end_time:$icon_timer_challenges_end_time,icon_timer_challenges_score:$icon_timer_challenges_score,icon_timer_challenges_question:$icon_timer_challenges_question,icon_company:$icon_company,icon_launchpad:$icon_launchpad,icon_leadgen:$icon_leadgen,poster_signature:$poster_signature,poster_salutation:$poster_salutation,icon_roleplay:$icon_roleplay,homepage_configs:$homepage_configs,home_screen_layout:$home_screen_layout}) {
          		affected_rows
          	}
          }
      - name: smartesell_deleteSelectedDirectories
        query: |
          mutation deleteSelectedDirectories ($user_type_ids: [bigint!]!, $selected_directory_ids: [bigint!]!) {
          	delete_smartsell_mapping_user_home_directory_content(where: {_and:[{content_type_id:{_eq:1}},{content_id:{_in:$selected_directory_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_directory_content(where: {_and:[{content_type_id:{_eq:1}},{content_id:{_in:$selected_directory_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_home_content(where: {_and:[{content_type_id:{_eq:1}},{content_id:{_in:$selected_directory_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_directories(where: {id:{_in:$selected_directory_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllDirectories
        query: |
          query getAllDirectoriesData ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	directories: smartsell_meta_directories(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		name
          		description
          		thumbnail_url
          		updated_at
          	}
          	total_count: smartsell_meta_directories_aggregate(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_deleteSelectedPosters
        query: |
          mutation deleteSelectedPosters ($user_type_ids: [bigint!]!, $selected_poster_ids: [bigint!]!) {
          	delete_smartsell_mapping_user_home_directory_content(where: {_and:[{content_type_id:{_eq:2}},{content_id:{_in:$selected_poster_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_directory_content(where: {_and:[{content_type_id:{_eq:2}},{content_id:{_in:$selected_poster_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_posters(where: {id:{_in:$selected_poster_ids}}) {
          		affected_rows
          	}
          	delete_smartsell_meta_posters_text_elements(where: {poster_id:{_in:$selected_poster_ids}}) {
          		affected_rows
          	}
          	delete_smartsell_meta_posters_image_elements(where: {poster_id:{_in:$selected_poster_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_updatePosterElements
        query: |
          mutation updatePosterElements ($text_elements: [smartsell_meta_posters_text_elements_insert_input!]!, $image_elements: [smartsell_meta_posters_image_elements_insert_input!]!, $deleteable_text_elements: [bigint!], $deleteable_image_elements: [bigint!]) {
          	insert_smartsell_meta_posters_text_elements(objects: $text_elements, on_conflict: {constraint:idx_17647_primary,update_columns:[poster_id,default_value,on_by_default,top_margin,left_margin,right_margin,text_alignment,font_family,font_size,font_color]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_posters_text_elements(where: {id:{_in:$deleteable_text_elements}}) {
          		affected_rows
          	}
          	insert_smartsell_meta_posters_image_elements(objects: $image_elements, on_conflict: {constraint:idx_17628_primary,update_columns:[poster_id,on_by_default,top_margin,left_margin,width,height,shape,keep_aspect_ratio]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_posters_image_elements(where: {id:{_in:$deleteable_image_elements}}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllVideos
        query: |
          query getAllVideos ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	videos: smartsell_meta_videos(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		name
          		description
          		thumbnail_url
          		updated_at
          	}
          	total_count: smartsell_meta_videos_aggregate(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_getAllPosters
        query: |
          query getAllPosters ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	posters: smartsell_meta_posters(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		name
          		description
          		image_url
          		updated_at
          	}
          	total_count: smartsell_meta_posters_aggregate(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_getAllPDFs
        query: |
          query getAllPDFs ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	pdfs: smartsell_meta_pdfs(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		name
          		description
          		thumbnail_url
          		updated_at
          	}
          	total_count: smartsell_meta_pdfs_aggregate(where: {_and:[{_or:[{name:{_ilike:$search_string}},{description:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_deleteSelectedVideos
        query: |
          mutation deleteSelectedVideos ($user_type_ids: [bigint!]!, $selected_video_ids: [bigint!]!) {
          	delete_smartsell_mapping_user_home_directory_content(where: {_and:[{content_type_id:{_eq:3}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_directory_content(where: {_and:[{content_type_id:{_eq:3}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_home_content(where: {_and:[{content_type_id:{_eq:3}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_videos(where: {id:{_in:$selected_video_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_deleteSelectedPDFs
        query: |
          mutation deleteSelectedPDFs ($user_type_ids: [bigint!]!, $selected_video_ids: [bigint!]!) {
          	delete_smartsell_mapping_user_home_directory_content(where: {_and:[{content_type_id:{_eq:4}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_directory_content(where: {_and:[{content_type_id:{_eq:4}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_mapping_user_home_content(where: {_and:[{content_type_id:{_eq:4}},{content_id:{_in:$selected_video_ids}},{user_type_id:{_in:$user_type_ids}}]}) {
          		affected_rows
          	}
          	delete_smartsell_meta_pdfs(where: {id:{_in:$selected_video_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_updateIOSAppRelease
        query: |
          mutation updateIOSAppRelease ($app_id: Int, $app_version: Int, $killable: smallint, $warnable: smallint, $admin_id: smallint!, $company_id: bigint!) {
          	update_smartsell_app_ios_version(_set: {app_id:$app_id,killable:$killable,warnable:$warnable,app_version:$app_version,admin_id:$admin_id,company_id:$company_id}, where: {}) {
          		affected_rows
          	}
          }
      - name: smartsell_updateAndroidAppRelease
        query: |
          mutation updateAndroidAppRelease ($app_id: Int, $app_version: Int, $killable: smallint, $warnable: smallint, $admin_id: smallint!, $company_id: bigint!) {
          	update_smartsell_app_android_version(_set: {app_id:$app_id,killable:$killable,warnable:$warnable,app_version:$app_version,admin_id:$admin_id,company_id:$company_id}, where: {}) {
          		affected_rows
          	}
          }
      - name: smartsell_deleteLiveStream
        query: |
          mutation deleteLiveStream ($id: Int!, $company_id: bigint!) {
          	delete_smartsell_meta_livestream(where: {_and:[{id:{_eq:$id}},{company_id:{_eq:$company_id}}]}) {
          		affected_rows
          	}
          }
      - name: smartsell/getAllQuickLinks
        query: |
          query getAllQuickLink ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	quick_links: smartsell_lookup_quick_links(where: {_and:[{quick_link_title:{_ilike:$search_string}},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {sequence:desc}) {
          		sequence
          		quick_link_title
          		quick_link_message
          		quick_link_action_text
          		quick_link_url
          		quick_link_id
          		sequence
          	}
          	total_count: smartsell_lookup_quick_links_aggregate(where: {_and:[{quick_link_title:{_ilike:$search_string}},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {sequence:desc}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_deleteSelectedQuickLinks
        query: |
          mutation deleteSelectedQuickLinks ($selected_quick_link_ids: [Int!]!) {
          	delete_smartsell_lookup_quick_links(where: {quick_link_id:{_in:$selected_quick_link_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_updateQuickLink
        query: |
          mutation updateQuickLink ($quick_link_id: Int!, $title: String, $message: String, $action: String, $url: String, $sequence: Int, $company_id: bigint!) {
          	update_smartsell_lookup_quick_links(_set: {quick_link_title:$title,quick_link_message:$message,quick_link_action_text:$action,sequence:$sequence,quick_link_url:$url}, where: {_and:[{quick_link_id:{_eq:$quick_link_id}},{company_id:{_eq:$company_id}}]}) {
          		affected_rows
          	}
          }
      - name: smartsell_deleteSelectedCards
        query: |
          mutation deleteSelectedCards ($selected_card_ids: [bigint!]!) {
          	delete_smartsell_group_cards(where: {card_id:{_in:$selected_card_ids}}) {
          		affected_rows
          	}
          	delete_smartsell_meta_cards(where: {id:{_in:$selected_card_ids}}) {
          		affected_rows
          	}
          	delete_smartsell_meta_cards_text_elements(where: {id:{_in:$selected_card_ids}}) {
          		affected_rows
          	}
          	delete_smartsell_meta_cards_image_elements(where: {id:{_in:$selected_card_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllUserTypeForCard
        query: |
          query getAllUserTypeForCard ($card_id: bigint!, $company_id: bigint!) {
          	all_user_types: smartsell_company_groups(where: {company_id:{_eq:$company_id}}, order_by: {id:asc}) {
          		id
          		name
          		user_type: name
          		filter_data
          	}
          	user_types: smartsell_company_groups(where: {company_groups_to_group_cards:{card_id:{_eq:$card_id}}}, order_by: {id:asc}) {
          		id
          		name
          		created_at
          		updated_at
          	}
          }
      - name: smartsell_getAllPushNotifications
        query: |
          query getAllPushNotifications ($offset: Int = 0, $limit: Int = 5, $company_id: bigint!, $search_string: String = "%") {
          	push_notifications: smartsell_user_push_notifications(where: {_and:[{_or:[{title:{_ilike:$search_string}},{topic:{_ilike:$search_string}},{action_target:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		id
          		title
          		topic
          		action_target
          		scheduled_date
          		updated_at
          	}
          	total_count: smartsell_user_push_notifications_aggregate(where: {_and:[{_or:[{title:{_ilike:$search_string}},{topic:{_ilike:$search_string}},{action_target:{_ilike:$search_string}}]},{company_id:{_eq:$company_id}}]}, offset: $offset, limit: $limit, order_by: {updated_at:desc}) {
          		aggregate {
          			count
          		}
          	}
          }
      - name: smartsell_deleteSelectedUserPushNotifications
        query: |
          mutation deleteSelectedUserPushNotifications ($selected_user_push_notification_ids: [bigint!]!) {
          	delete_smartsell_user_push_notifications(where: {id:{_in:$selected_user_push_notification_ids}}) {
          		affected_rows
          	}
          }
      - name: smartsell_getAllUserTypesForPresentations
        query: |
          query getAllUserTypesForPresentations ($presentation_id: Int!, $company_id: bigint!) {
          	all_user_types: smartsell_company_groups(where: {company_id:{_eq:$company_id}}, order_by: {id:asc}) {
          		id
          		name
          		user_type: name
          		filter_data
          	}
          	user_types: smartsell_company_groups(where: {company_groups_to_group_presentations:{presentation_id:{_eq:$presentation_id}}}, order_by: {id:asc}) {
          		id
          		name
          		created_at
          		updated_at
          	}
          }
      - name: smartsell_addSelectedDirectoriesToHomeDirectory
        query: |
          mutation addSelectedDirectoriesToHomeDirectory ($directories: [smartsell_mapping_user_home_directory_content_insert_input!]!) {
          	insert_smartsell_mapping_user_home_directory_content(objects: $directories) {
          		affected_rows
          	}
          }
      - name: smartsell_getSpecificUserContent
        query: |
          query getSpecificUserContent ($user_type_id: bigint!, $id: bigint!) {
          	directory: smartsell_meta_directories(where: {_and:[{meta_directories_to_mapping_specific_user_directory_content:{directory_id:{_eq:$id}}},{meta_directories_to_mapping_specific_user_directory_content:{user_type_id:{_eq:$user_type_id}}},{meta_directories_to_mapping_specific_user_directory_content:{content_type_id:{_eq:1}}}]}) {
          		id
          		company_id
          		name
          		description
          		thumbnail_url
          		display_type_id
          		confidential
          		screenshot
          		only_folder_allowed
          		sequence: meta_directories_to_mapping_specific_user_directory_content {
          			sequence
          		}
          	}
          	poster: smartsell_meta_posters(where: {_and:[{meta_posters_to_mapping_specific_user_directory_content:{directory_id:{_eq:$id}}},{meta_posters_to_mapping_specific_user_directory_content:{user_type_id:{_eq:$user_type_id}}},{meta_posters_to_mapping_specific_user_directory_content:{content_type_id:{_eq:2}}}]}) {
          		id
          		company_id
          		name
          		description
          		share_text
          		reg_name
          		reg_description
          		thumbnail_url
          		image_url
          		sequence: meta_posters_to_mapping_specific_user_directory_content {
          			sequence
          		}
          	}
          	video: smartsell_meta_videos(where: {_and:[{meta_videos_to_mapping_specific_user_directory_content:{directory_id:{_eq:$id}}},{meta_videos_to_mapping_specific_user_directory_content:{user_type_id:{_eq:$user_type_id}}},{meta_videos_to_mapping_specific_user_directory_content:{content_type_id:{_eq:3}}}]}) {
          		id
          		company_id
          		name
          		description
          		share_text
          		reg_name
          		reg_description
          		thumbnail_url
          		video_url
          		is_public
          		sequence: meta_videos_to_mapping_specific_user_directory_content {
          			sequence
          		}
          	}
          	pdf: smartsell_meta_pdfs(where: {_and:[{meta_pdfs_to_mapping_specific_user_directory_content:{directory_id:{_eq:$id}}},{meta_pdfs_to_mapping_specific_user_directory_content:{user_type_id:{_eq:$user_type_id}}},{meta_pdfs_to_mapping_specific_user_directory_content:{content_type_id:{_eq:4}}}]}) {
          		id
          		company_id
          		name
          		description
          		share_text
          		reg_name
          		reg_description
          		thumbnail_url
          		pdf_url
          		language_id
          		sequence: meta_pdfs_to_mapping_specific_user_directory_content {
          			sequence
          		}
          	}
          }
      - name: smartsell_addNewVideo
        query: |
          mutation addNewVideo ($name: String!, $description: String!, $share_text: String, $thumbnail_url: String = "", $video_url: String = "", $language_id: Int, $reg_name: String, $reg_description: String, $reg_share_text: String, $company_id: bigint, $is_public: Int = 0) {
          	insert_smartsell_meta_videos_one(object: {name:$name,company_id:$company_id,description:$description,share_text:$share_text,reg_name:$reg_name,reg_description:$reg_description,reg_share_text:$reg_share_text,thumbnail_url:$thumbnail_url,video_url:$video_url,language_id:$language_id,is_public:$is_public}) {
          		id
          	}
          }
      - name: smartsell_updateVideo
        query: |
          mutation updateVideo ($id: bigint, $name: String!, $description: String!, $share_text: String, $thumbnail_url: String = "", $video_url: String = "", $language_id: Int, $reg_name: String, $reg_description: String, $reg_share_text: String, $company_id: bigint, $is_public: Int = 0) {
          	update_smartsell_meta_videos_by_pk(_set: {name:$name,company_id:$company_id,description:$description,share_text:$share_text,reg_name:$reg_name,reg_description:$reg_description,reg_share_text:$reg_share_text,thumbnail_url:$thumbnail_url,video_url:$video_url,language_id:$language_id,is_public:$is_public}, pk_columns: {id:{_eq:$id}}) {
          		id
          	}
          }
